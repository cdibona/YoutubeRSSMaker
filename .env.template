# Copy this file to .env and update the values for your environment.

# Required: YouTube Data API v3 key used for all requests.
YT_API_KEY=REPLACE_WITH_YOUR_KEY

# Directory where generated RSS feeds should be written.
# Point this to your opensaucerssfeeds checkout (the script will create sub-directories if needed).
OUTPUT_DIRECTORY=../opensaucerssfeeds/feeds

# Database path for incremental feed storage (SQLite database file).
# This stores video metadata for efficient incremental updates.
DATABASE_PATH=feeds.db

# CHANNELS can be provided as JSON (preferred) or as simple 'channel>output' pairs separated by commas/newlines.
# Example JSON configuration (remember to keep everything on one line or wrap the value in single quotes):
# CHANNELS='[{"channel": "@thisoldtony", "output": "thisoldtony.xml"}, {"channel": "https://www.youtube.com/c/linustech", "output": "linus.xml", "oldest_first": true}]'
#
# Example simple format:
# CHANNELS=@thisoldtony>thisoldtony.xml,@veritasium>science/veritasium.xml
CHANNELS='[
  {"channel": "@thisoldtony", "output": "thisoldtony.xml"},
  {"channel": "@nilered", "output": "nilered.xml"},
  {"channel": "@williamossman", "output": "william-ossman.xml"},
  {"channel": "@peterbrownwastaken", "output": "peter-brown.xml"},
  {"channel": "@shortcircuit", "output": "short-circuit.xml"},
  {"channel": "@technologyconnections", "output": "technology-connections.xml"},
  {"channel": "@agingwheels", "output": "aging-wheels.xml"},
  {"channel": "@nileblue", "output": "nileblue.xml"},
  {"channel": "@VeraRubinObservatory", "output": "vera-c-rubin-observatory.xml"}
]'

# Optional logging configuration.
# LOG_LEVEL=INFO

# Optional continuous refresh settings (used with update_feeds.py --loop or RUN_CONTINUOUSLY=true).
# RUN_CONTINUOUSLY=false
# REFRESH_INTERVAL_MINUTES=60
# REFRESH_INTERVAL_SECONDS=3600

# Discord webhook for logging and notifications (optional).
# Get this URL from Discord: Server Settings > Integrations > Webhooks
DISCORD_WEBHOOK_URL=

# Optional testing webhook for stats reports (separate from main webhook)
# Use this for sending stats to a different Discord channel for testing
DISCORD_TESTING_WEBHOOK_URL=

# Optional developer webhook for debug/error/info messages
# Use this for sending technical messages to a separate Discord channel
DISCORD_DEVELOPER_WEBHOOK_URL=

# Logging configuration
# LOG_TO_DISCORD=true
# DISCORD_LOG_LEVEL=INFO
